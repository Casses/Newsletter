# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy dotnet core project to Azure Function App - Notify-Api

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '8.0.x' # set this to the dotnet version to use

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          # Copy .azurefunctions folder to output directory for deployment
          cp -r .azurefunctions ./output/
          # Update scriptFile paths in function.json files
          sed -i 's|src/Newsletter.Functions/bin/Newsletter.Functions.dll|bin/Newsletter.Functions.dll|g' ./output/.azurefunctions/*/function.json
          popd
      
      - name: 'Deploy Database Migrations'
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/src/Newsletter.Data'
          # Install EF Core tools
          dotnet tool install --global dotnet-ef
          # Verify database connection
          echo "Verifying database connection..."
          dotnet ef database update --connection "${{ secrets.AZURE_SQL_CONNECTION_STRING }}" --dry-run
          # List available migrations
          echo "Available migrations:"
          dotnet ef migrations list
          # Run migrations against Azure SQL Database
          echo "Applying database migrations..."
          dotnet ef database update --connection "${{ secrets.AZURE_SQL_CONNECTION_STRING }}"
          echo "Database migrations completed successfully!"
          popd
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_079C709E54E7489BA1E48452309AD523 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_74003D729F69422D9F9ABE685CDAE9D6 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_9266EF4BD71443FFACDF02F96D6C6ACB }}

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'Notify-Api'
          slot-name: 'Production'
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          